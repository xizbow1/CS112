//    CS 112 Fall 2023 - Week 09 Lab
//    C++ Derived Classes
//
// *** DO NOT EDIT THIS FILE ***

#ifndef PLAYERCHAR_H
#define PLAYERCHAR_H

#include <cstdlib>
#include <iostream>
#include <string>
#include <cmath>

using namespace std;

// Declarations of data types and constants

// PlayerChar objects can have any name the user wants

// There are only a certain set of roles
// a PlayerChar can have - this means we'll use
// an enumerated type!

enum Role {Ogre, Sprite, Elf, Valkyrie, Orc};
const int NUM_ROLES = 5;
const string ROLE_NAMES[NUM_ROLES] =
    {"Ogre", "Sprite", "Elf", "Valkyrie", "Orc"};

// Arrays for initial values of strengh and stamina
// for each Role

const int INIT_STRENGTH[NUM_ROLES]
    = {700, 300, 400, 600, 500};
const double INIT_AGILITY[NUM_ROLES]
    = {2.5, 5.5, 4.5, 3.0, 3.5};

// Default values for a PlayerChar when not specified
const string DEFAULT_NAME = "Fred";
const Role DEFAULT_ROLE = Ogre;

// Definition of class PlayerChar

class PlayerChar {
public:

    // Headers for constructors

    PlayerChar();
    PlayerChar(string name);
    PlayerChar(string name, Role role);

    // Headers for accessors

    string getName() const;
    Role getRole() const;
    int getStrength() const;
    double getAgility() const;

    // Headers for mutators

    void setName(string);
    void setStrength(int);
    void setAgility(double);

    // Headers for comparison operator method

    bool operator ==(const PlayerChar& rhs) const;

    // Headers for other functions

    void display() const;
    string to_string() const;

private:

    string playerName;
    Role playerRole;
    int playerStrength;
    double playerAgility;

};

#endif /* PLAYERCHAR_H */

